int fibonacci(int n){
    if (n<= 1){
        return n;
    }
    return fibonacci(n-1) + fibonacci(n -2);
}

int main(int argc, char *argv[]){
    setlocale(LC_ALL, "");
    int n = atoi(argv[1]);
    int max = atoi(argv[2]);
    clock_t start, end;
    double tempo = 0.0;
    int resultado = 0;

    for(int i = 0; i < max; i++){
        start = clock();
        resultado = fibonacci(n);
        end = clock();
        tempo += ((double)(end - start)) / CLOCKS_PER_SEC;
        printf("Progresso: %.1f%% concluido\n", ((i+1) / (double)max) * 100);
    }

    printf("Fibonacci na posicao %d eh %d\n", n, resultado);
    printf("Tempo medio: %f µs\n", (tempo/max)*1e6);
    return 0;
}
resultados
// 10 1000 = Fibonacci na posicao 10 eh 55
Tempo medio: 4,000000 µs

// 20 1000 = Fibonacci na posicao 20 eh 6765
Tempo medio: 103,000000 µs

// 30 1000 = Fibonacci na posicao 30 eh 832040
Tempo medio: 7692,000000 µs

// 40 1000 = Algoritmo proibitivo para n = 40

// [...]
